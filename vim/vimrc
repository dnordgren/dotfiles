" Enable filetype plugins
filetype plugin on
filetype indent on

" reload files when changed on disk, i.e. via `git checkout`
set autoread

" yank and paste with the system clipboard
" doesn't work with tmux UNLESS
" $ brew install reattach-to-user-namespace
" in .tmux-conf:
" set-option -g default-command \"reattach-to-user-namespace -l bash\"
" (remove escapes)
 set clipboard=unnamed

" add shortcuts to copy / cut / paste from visual mode to system clipboard
" MACOS
" vmap <C-x> :!pbcopy<CR>
" vmap <C-c> :w !pbcopy<CR><CR>
" vmap <C-v> :!pbpaste<CR>

" don't store swapfiles in the current directory
set directory-=.

" show trailing whitespace
set list
set listchars=tab:▸\ ,trail:▫

" search as you type
set incsearch

" insert mode tab and backspace use 2 spaces

" show a navigable menu for tab completion
set wildmenu
set wildmode=longest,list,full

" Pathogen setup
execute pathogen#infect()
syntax on
filetype plugin indent on

" Packages
if executable('ag')
 let g:ackprg = 'ag --vimgrep'
 set grepprg=ag\ --nogroup\ --nocolor
 let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
 let g:ctrlp_use_caching = 0
endif

let g:ctrlp_custom_ignore = {
  \ 'dir': '\.git$\|\.yardoc\|bower_components|node_modules|public$|log\|tmp$',
  \ 'file': '\.so$\|\.dat$|\.DS_Store$'
  \ }

" Key Commands
map <C-\> :NERDTreeToggle<CR>

" Color characters of too-long lines
set colorcolumn=120
highlight ColorColumn ctermbg=darkgray

"Always show current position
set ruler

" highlight matching braces
set showmatch

" Height of the command bar
set cmdheight=3

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases
set smartcase

" Highlight search results
set hlsearch

" How many tenths of a second to blink when matching brackets
set mat=2

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Enable syntax highlighting
syntax enable

"colorscheme desert
"set background=dark

" Use spaces instead of tabs
set expandtab

" Be smart when using tabs ;)
set smarttab

" 1 tab = 2 spaces
set shiftwidth=2
set tabstop=2

" Linebreak on 500 characters
set lbr
set tw=500

"Auto indent
set autoindent
" C-style identation
set cindent
"Smart indent
"set si

set wrap "Wrap lines

" turn on line numbers
set number

" JavaScript
au FileType javascript setl fen
au FileType javascript setl nocindent

" Git
au FileType gitcommit setlocal tw=72

" Don't replace register when pasting copied word over another
xnoremap p pgvy

" Remap 'ff' to escape
:imap ff <Esc>

" Open NERDTree automatically when vim starts up if no files specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Open NERDTree automatically when vim starts up if a directory is opened
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" Trim trailing whitespace on save for certain file types
autocmd BufWritePre *.{js,jsx,md,cs,scss,css} :%s/\s\+$//e

" Make vim work like multiple-file editors
set hidden

" Smart next-line-comment return key usage
" Return-return removes comment on next line
function! EnterEnter()
  if getline(".") =~ '^\s*\(//\|#\|"\)\s*$'
    return "\<C-u>"
  else
    return "\<CR>"
  endif
endfunction
imap <expr> <CR> EnterEnter()
